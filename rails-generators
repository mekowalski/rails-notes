Rails system has a great amount of generators to do the manual labor, instead of creating DB tables,
configuring views, drawing individual routes and bug prone features

Rails Generators
-Setup basic specs for app's test suite, won't write complex logic tests but will provide basic examples
-Same way each time, standardize code & enables dev to be more efficient
-It follows Rails RESTful naming patterns, removes dupe code, uses partials, etc

Abusing Generators
-Should use a generator only when the task requires it
  eg: chainsaw is a great tool but you wouldn't use it for every task around the house such as cleaning

-Certain G's create a bit more code than necessary

RAILS GENERATE
-all Rails generators are entered as commands into terminal with syntax:
  rails generate <name of generator> <options> --no-test-framework
  or rails g (for short)

MIGRATION G
-Rails migration has great setup of conventions to help manage DB schema efficiently
-eg: terminal command - rails g migration AddNewAttributeToBeers
-Alter DB schema overtime, as a new 'version' of the DB


MODEL G
-This G is used regularly to create core code needed to create a model & associated DB table
-eg: terminal command - rails g model Style name:string --no-test-framework
-Creates DB migration adding a table and column(s)
-Adds a model file that will inherit from ActiveRecord::Base

CONTROLLER G
-Great for creating static views or nonCRUD related features
-eg: terminal command - rails g controller BeerStyles
-Creates controller file inheriting from ApplicationController
-Set of routes(***if given, i didn't provide any)
-New dir for all view templates along w/ view template file for each controller action(***)
-View helper method file
-Asset files of Coffescript and scss for styles both for the controller
-This G created a large # of files that may never be used, therefore be thoughtful with controller G

RESOURCE G
-Good option for building and API, using frontend MVC framework, or simple want to manually create views
-eg: terminal command - a few options
     rails generate resource beer # no attributes
     rails generate resource beer name:string description:text abv:float location:string
     rails generate resource beerStyle name:string
-Migration file creating new DB table for attr passed in from G
-Model file that inherits from ActiveRecord::Base
-Controller file that inherits from ApplicationController
-View dir but no view template files & view helper file
-Asset files of Coffescript and scss for styles both for the controller
-Full resources call in the routes.rb file
-Smart G that creates core functionality needed for full featured resource
-resources :resourceName performs CRUD in an app
-Automatically creates each CRUD route & makes it avialbale in controller
