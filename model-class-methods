Filter by certain attributes
-Add controls to the view to manage filter
*see beers/index.html.erb*
-At this point, form is present in browser view but nothing occurs when an instance is selected and Filter is
 clicked

-Take action and write code to do filtering
*beers/index.html.erb at top*
 <% if !params[:beer].blank? %>
   <% @beers = Beer.where(beer_style: params[:beer_style]) %>
 <% end %>

^^^this is not helpful at all for me. i don't know why i'm using this
^^^scratch that, it is actually working, it's the partial that i'm not in love with


REFACTORING OUT OF THE VIEW
-In MVC separation of concerns, put the code in the right place
-Currently, the beers#index view is cluttered with so much business logic
-Current red flags
  1. View directly queries DB for beers AND beer_styles
  2. View reads params which is out of the way to allow from controller
  3. View overrides @beers, which controller is already creating, doubling the DB requests

-Correction:
  1. Kill/Remove/Delete Filer logic from beers/index.html.erb
  2. View shouldn't directly query DB for model association of BeerStyle
  3. The Controller should provide all the data needed


REFACTORING DATABASE LOGIC OUT OF CONTROLLER
-Controller should not care about deep knowledge of DB to make direct queries
-Controller should care about asking model for what it needs in the simplest way

-Move separation of concerns into the Model
-Is this a class method on Beer model itself or instance method on specific beer?
-Since the query is for multiple beer instances from DB, there won't be an instance to begin with therefore
 class method is used

-Correction:
  *see beer.rb*
  1. Add BeerStyle filter into Beer model
  2. This is similar code to beers#index, change action to use by_beer_style method
