Data Model
Rails will take over the concept of nested attributes
-Use of accepts_nested_attributes_for and fields_for FromHelper
Company
  -has_many beers
  -has a name(string)

Beer
  -belongs_to(has one) company
  -has a name(string)
  -has a description(text)
  -has an abv(float)
  -has a location(string)

class Company < ActiveRecord::Base
  has_many :beers
  accepts_nested_attributes_for :beers
end

-accepts_nested_attributes_for writes a setter method of beers_attributes= to create both Company object
 and 2 Beer objects


FIELDS_FOR
-create a params hash, gives nice, easy to read lines of code


CREATING STUBS
-when creating class in controller, add empty beers to fill out
def new
  @company = Company.new
  @company.beers.build <--- empty filed for beer to fill out
end
*L32: in the browser the form with fields and its attributes are present
*This doesn't work yet, need to modify _params in private


AVOIDING DUPLICATES
-Can't use accepts_nested_attributes_for when wanting to avoid duplicates
-If wanted to create company while creating beers, need find_or_create_by in company_attributes=(company)
setter method
-Providing no matching company and allowing creation of new company


NESTED FORM
-form that allows you to deal with creation of a different model
-synonymous with fields_for

Methods that come along with relationships
@instance.build_class :method when a model belongs_to another model
@instance.classes.build :method for when a model has_many instances of a model
