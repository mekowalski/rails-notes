MANUAL CHECKS
-From technical perspective, what does a user login actually mean?
-When a user logs in, their cookies are added to their user_id in their session
-User specifications should be present to them only(name, uploads, recent additions, etc)

eg: beer example, beers#show

def show
  @beer = Beer.find(params[:])
end

NEW REQUIREMENT FOR WHEN A USER LOGS IN
def show
  return head(:forbidden) unless session.include? :user_id
  @beer = Beer.find(params[:id])
end

L14: return guard returning an error if the session doesn't include :user_id
L14: head(:forbidden) controller method returning specified HTTP status code, 403 forbidden

-Return guard works well and may be considered in all actions but that isn't DRY code
-Rails provides solution of before_action, which is a filter that runs before, after or around a controller's
 action(this runs before the action)

SKIPPING FILTER FOR CERTAIN ACTIONS
-If a user should be allowed to see an index of something but keep before_action filter
-Use skip_before_action

before_action :require_login
skip_before_action :require_login, only: [:index]

-Tells Rails to skip require_login filter only on index action
